<?xml version="1.0" encoding="UTF-8"?>
<actions>
    <action>
        <actionName>run</actionName>
        <packagings>
            <packaging>jar</packaging>
        </packagings>
        <goals>
            <goal>spring-boot:run</goal>
        </goals>
        <properties>
<#if isBoot2>
    <#if (vmOpts)?has_content>
            <spring-boot.run.jvmArguments>${vmOpts}</spring-boot.run.jvmArguments>
    </#if>
    <#if (mainClass)?has_content>
            <spring-boot.run.mainClass>${mainClass}</spring-boot.run.mainClass>
    </#if>
<#else>
    <#if (vmOpts)?has_content>
            <run.jvmArguments>${vmOpts}</run.jvmArguments>
    </#if>
    <#if (mainClass)?has_content>
            <run.mainClass>${mainClass}</run.mainClass>
    </#if>
</#if>
<#if forceColor?? && forceColor>
            <Env.SPRING_OUTPUT_ANSI_ENABLED>always</Env.SPRING_OUTPUT_ANSI_ENABLED>
</#if>
<#if isBoot2>
    <#if manualRestart?? && manualRestart>
            <Env.SPRING_DEVTOOLS_RESTART_TRIGGERFILE>.nbRestartTrigger</Env.SPRING_DEVTOOLS_RESTART_TRIGGERFILE>
    </#if>
<#else>
    <#if manualRestart?? && manualRestart>
            <Env.SPRING_DEVTOOLS_RESTART_TRIGGER_FILE>.nbRestartTrigger</Env.SPRING_DEVTOOLS_RESTART_TRIGGER_FILE>
    </#if>
</#if>
        </properties>
    </action>
    <action>
        <actionName>debug</actionName>
        <packagings>
            <packaging>jar</packaging>
        </packagings>
        <goals>
            <goal>spring-boot:run</goal>
        </goals>
        <properties>
<#if isBoot2>
    <#if (vmOpts)?has_content>
            <spring-boot.run.jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${"$"}{jpda.address} ${vmOpts}</spring-boot.run.jvmArguments>
    <#else>
            <spring-boot.run.jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${"$"}{jpda.address}</spring-boot.run.jvmArguments>
    </#if>
    <#if (mainClass)?has_content>
            <spring-boot.run.mainClass>${mainClass}</spring-boot.run.mainClass>
    </#if>
<#else>
    <#if (vmOpts)?has_content>
            <run.jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${"$"}{jpda.address} ${vmOpts}</run.jvmArguments>
    <#else>
            <run.jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${"$"}{jpda.address}</run.jvmArguments>
    </#if>
    <#if (mainClass)?has_content>
            <run.mainClass>${mainClass}</run.mainClass>
    </#if>
</#if>
<#if forceColor?? && forceColor>
            <Env.SPRING_OUTPUT_ANSI_ENABLED>always</Env.SPRING_OUTPUT_ANSI_ENABLED>
</#if>
<#if isBoot2>
    <#if manualRestart?? && manualRestart>
            <Env.SPRING_DEVTOOLS_RESTART_TRIGGERFILE>.nbRestartTrigger</Env.SPRING_DEVTOOLS_RESTART_TRIGGERFILE>
    </#if>
<#else>
    <#if manualRestart?? && manualRestart>
            <Env.SPRING_DEVTOOLS_RESTART_TRIGGER_FILE>.nbRestartTrigger</Env.SPRING_DEVTOOLS_RESTART_TRIGGER_FILE>
    </#if>
</#if>
            <jpda.listen>true</jpda.listen>
        </properties>
    </action>
    <action>
        <actionName>profile</actionName>
        <packagings>
            <packaging>jar</packaging>
        </packagings>
        <goals>
            <goal>process-classes</goal>
            <goal>org.codehaus.mojo:exec-maven-plugin:1.2.1:exec</goal>
        </goals>
        <properties>
<#if (mainClass)?has_content>
            <exec.args>-classpath %classpath ${mainClass}</exec.args>
</#if>
            <exec.executable>java</exec.executable>
        </properties>
    </action>
</actions>
